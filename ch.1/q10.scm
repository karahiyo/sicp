;; q 1.10

;; Ackermann関数
(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1)
                 (A x (- y 1))))))

;; Q. (A 1 10)
(print (A 1 10))
;; => 1024


;; Q. (A 2 4)
(print (A 2 4))
;; => 65536

;; Q. (A 3 3)
(print (A 3 3))
;; => 65536

;; Q. (define (f n) (A 0 n))
;; => 2n

;; Q. (define (g n) (A 1 n))
;; => 2^n
;;
;; ## 置き換えモデル
;; (A 1 10)
;; (A 0 (A 1 9))
;; (A 0 (A 0 (A 1 8)))
;; (A 0 (A 0 (A 0 (A 1 7))))
;; ...
;; (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 1)))))))))))
;; (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 2))))))))))
;; (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 4)))))))))
;; (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 8))))))))
;; ...
;; (A 0 512)
;; 1024

;; Q. (define (h n) (A 2 n))
;; => 2^n^2

;; Q. (define (k n) (* 5 n n))
;; => 5n^2
