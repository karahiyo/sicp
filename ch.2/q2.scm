;; Q 2.2

(define (make-segment p1 p2)
  (cons p1 p2))
(define (start-segment s)
  (car s))
(define (end-segment s)
  (cdr s))
(define (make-point x y)
  (cons x y))
(define (x-point p)
  (car p))
(define (y-point p)
  (cdr p))
(define (midpoint-segment s)
  (let ((sp (start-segment s))
        (ep (end-segment s)))
    (make-point (midpoint-point (x-point ep) (x-point sp))
                (midpoint-point (y-point ep) (y-point sp)))))
(define (midpoint-point n m)
    (/ (+ m n) 2.0))
(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

(print-point (midpoint-segment (make-segment (make-point 1 1) (make-point 5 5))))
(print-point (midpoint-segment (make-segment (make-point -1 -1) (make-point 5 5))))
(print-point (midpoint-segment (make-segment (make-point -1 -1) (make-point -5 -5))))
(print-point (midpoint-segment (make-segment (make-point 5 5) (make-point 1 1))))
(print-point (midpoint-segment (make-segment (make-point 1 1) (make-point 1 1))))
